name: CD

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: vadermodularfuzzer

permissions:
  contents: read
  packages: write

jobs:
  build-packages:
    name: Build Packages
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag' || github.event_name == 'workflow_dispatch'
    strategy:
      matrix:
        os: [ubuntu-20.04, ubuntu-22.04, centos-8, centos-9, kali]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Build package
        run: python -m build

      - name: Upload packages
        uses: actions/upload-artifact@v4
        with:
          name: packages-${{ github.sha }}
          path: |
            dist/*.whl
            dist/*.tar.gz

  deploy:
    name: Deploy to Production
    needs: [build-packages]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image_name: [klee, u20, u22, centos8, centos9, kali]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download packages
        uses: actions/download-artifact@v4
        with:
          name: packages-${{ github.sha }}
          path: build/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          context: .
          file: dockerfiles/Dockerfile.${{ matrix.image_name }}
          build-args: |
            VMF_REPO=https://github.com/${{ github.repository }}.git
            VMF_SHA=${{ github.sha }}
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ matrix.image_name }}:latest
            ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ matrix.image_name }}:${{ github.ref_name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64
          load: true
          target: vmf
          build-contexts: |
            .=./

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            build/*.whl
            build/*.tar.gz
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to Package Repositories
        run: |
          # Add your package repository publishing logic here
          # This could include:
          # - Publishing to Debian repository
          # - Publishing to RPM repository
          # - Publishing to Arch Linux repository
          echo "Package publishing steps to be implemented" 