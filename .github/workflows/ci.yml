name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Build and test with Docker
      run: |
        set -e  # Exit on any error
        
        # Build the Docker image
        docker build -t vmf-test -f dockerfiles/Dockerfile.u22 .
        
        # Run unit tests
        docker run --rm vmf-test bash -c "cd /usr/local/src/vmf/build && ctest --output-on-failure"
        
        # Run fuzzing tests
        docker run --rm -v $(pwd):/workdir vmf-test bash -c "
          set -e  # Exit on any error
          cd /workdir
          
          # Create output directory
          mkdir -p fuzz_output
          
          # Build test binaries
          cd test/haystackSUT && make
          cd ../magicBytesSUT && make
          cd ../..
          
          # Run fuzzing tests with timeout
          timeout 300 vmf fuzz -c test/haystackSUT/haystack_stdin.yaml -o fuzz_output/haystack_stdin
          timeout 300 vmf fuzz -c test/haystackSUT/haystack_file.yaml -o fuzz_output/haystack_file
          timeout 300 vmf fuzz -c test/magicBytesSUT/magicbytes.yaml -o fuzz_output/magicbytes
        "

    - name: Upload fuzzing results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: fuzzing-results
        path: fuzz_output/
        retention-days: 7 